{"version":3,"sources":["components/Posts.js","components/Pagination.js","components/SelectSettings.js","App.js","index.js"],"names":["Posts","posts","className","map","post","key","id","title","Pagination","totalPosts","postsPerPage","currentPage","changePage","pages","i","Math","ceil","push","type","href","onClick","disabled","page","classNames","active","length","SelectSettings","changeSetting","onChange","value","hidden","App","state","target","setState","parentElement","axios","get","then","res","data","this","lastPostIndex","firstPostIndex","currentPosts","slice","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee8f2ff4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Posts = ({ posts }) => (\n  <ul className=\"list-group\">\n    {posts.map(post => (\n      <li key={post.id} className=\"list-group-item\">\n        {post.title}\n      </li>\n    ))}\n  </ul>\n);\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Pagination = ({\n  totalPosts,\n  postsPerPage,\n  currentPage,\n  changePage,\n}) => {\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pages.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          <button\n            id=\"prev\"\n            type=\"button\"\n            className=\"page-link\"\n            href=\"#\"\n            onClick={changePage}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </button>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={(classNames({\n              'page-item': true,\n              active: page === currentPage,\n            }))}\n            onClick={changePage}\n          >\n            <a\n              id={page}\n              className=\"page-link\"\n              href={`#${page}`}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          id={pages[pages.length - 1]}\n          className=\"page-item\"\n        >\n          <button\n            id=\"next\"\n            type=\"button\"\n            className=\"page-link\"\n            href=\"#\"\n            onClick={changePage}\n            disabled={currentPage === pages[pages.length - 1]}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  totalPosts: PropTypes.number.isRequired,\n  postsPerPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst posts = [5, 10, 15, 25];\n\nexport const SelectSettings = ({ changeSetting }) => (\n  <select\n    onChange={changeSetting}\n    className=\"settings-select\"\n  >\n    <option value=\"\" hidden>select post per page</option>\n    {posts.map(value => (\n      <option key={value} value={value}>\n        {value}\n        {' '}\n        posts per page\n      </option>\n    ))}\n  </select>\n);\n\nSelectSettings.propTypes = {\n  changeSetting: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Posts } from './components/Posts';\nimport { Pagination } from './components/Pagination';\nimport { SelectSettings } from './components/SelectSettings';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    posts: [],\n    currentPage: 1,\n    postsPerPage: 10,\n  }\n\n  componentDidMount() {\n    axios.get(`https://jsonplaceholder.typicode.com/posts`)\n      .then((res) => {\n        const posts = res.data;\n\n        this.setState({ posts });\n      });\n  }\n\n  changePage = ({ target }) => {\n    const { currentPage } = this.state;\n\n    if (target.id === 'prev') {\n      currentPage !== 1\n        ? (this.setState(state => ({\n          currentPage: state.currentPage - 1,\n        })))\n        : (this.setState({\n          currentPage: 1,\n        }));\n    } else if (target.id === 'next') {\n      currentPage < +target.parentElement.id\n        ? (this.setState(state => ({\n          currentPage: state.currentPage + 1,\n        })))\n        : (this.setState({\n          currentPage: +target.parentElement.id,\n        }));\n    } else {\n      this.setState({\n        currentPage: +target.id,\n      });\n    }\n  }\n\n  changeSetting = ({ target }) => {\n    this.setState({\n      postsPerPage: target.value,\n    });\n  }\n\n  render() {\n    const {\n      currentPage,\n      posts,\n      postsPerPage,\n    } = this.state;\n\n    const lastPostIndex = currentPage * postsPerPage;\n    const firstPostIndex = lastPostIndex - postsPerPage;\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex);\n\n    return (\n      <div>\n        <h1>Pagination</h1>\n        <SelectSettings\n          postsPerPage={postsPerPage}\n          changeSetting={this.changeSetting}\n        />\n        <Pagination\n          totalPosts={posts.length}\n          postsPerPage={postsPerPage}\n          currentPage={currentPage}\n          changePage={this.changePage}\n        />\n        <p>\n          {firstPostIndex + 1}\n          {' '}\n          -\n          {' '}\n          {lastPostIndex}\n          {' '}\n          of\n          {' '}\n          {currentPosts.length}\n        </p>\n        <Posts posts={currentPosts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}